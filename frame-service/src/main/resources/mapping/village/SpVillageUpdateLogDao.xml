<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hxy.sys.dao.SpVillageUpdateLogDao">


    <resultMap type="com.hxy.sys.entity.SpVillageUpdateLogEntity" id="spVillageUpdateLogMap">
        <result property="id" column="id"/>
        <result property="villageId" column="village_id"/>
        <result property="oldValue" column="old_value"/>
        <result property="newValue" column="new_value"/>
        <result property="updateUserId" column="update_user_id"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="Base_Column_List" >
		id, 
		village_id, 
		old_value, 
		new_value, 
		update_user_id, 
		create_time
    </sql>

	<select id="queryObject" resultType="com.hxy.sys.entity.SpVillageUpdateLogEntity" resultMap="spVillageUpdateLogMap">
		select
		<include refid="Base_Column_List" />
		from sp_village_update_log
		where id = #{value}
	</select>

	<select id="queryList" resultType="com.hxy.sys.entity.SpVillageUpdateLogEntity" resultMap="spVillageUpdateLogMap">
		select
		<include refid="Base_Column_List" />
		from sp_village_update_log
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

    <select id="queryListByBean" resultType="com.hxy.sys.entity.SpVillageUpdateLogEntity" resultMap="spVillageUpdateLogMap">
        select
        <include refid="Base_Column_List" />
        from sp_village_update_log
        WHERE 1=1
    </select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from sp_village_update_log
	</select>
	 
	<insert id="save" parameterType="com.hxy.sys.entity.SpVillageUpdateLogEntity" useGeneratedKeys="true" keyProperty="id">
		insert into sp_village_update_log
		(
			`village_id`, 
			`old_value`, 
			`new_value`, 
			`update_user_id`, 
			`create_time`
		)
		values
		(
			#{villageId}, 
			#{oldValue}, 
			#{newValue}, 
			#{updateUserId}, 
			#{createTime}
		)
	</insert>
	 
	<update id="update" parameterType="com.hxy.sys.entity.SpVillageUpdateLogEntity">
		update sp_village_update_log 
		<set>
			<if test="villageId != null">`village_id` = #{villageId}, </if>
			<if test="oldValue != null">`old_value` = #{oldValue}, </if>
			<if test="newValue != null">`new_value` = #{newValue}, </if>
			<if test="updateUserId != null">`update_user_id` = #{updateUserId}, </if>
			<if test="createTime != null">`create_time` = #{createTime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from sp_village_update_log where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from sp_village_update_log where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>